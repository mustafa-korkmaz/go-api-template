consumes:
- application/json
definitions:
  APIResponse:
    description: APIResponse represents base response
    properties:
      data:
        type: object
        x-go-name: Data
      error_code:
        $ref: '#/definitions/ErrorCodeType'
      message:
        type: string
        x-go-name: Message
      result:
        $ref: '#/definitions/ResponseResultType'
    type: object
    x-go-package: github.com/mustafa-korkmaz/goapitemplate/pkg/viewmodel/response
  ErrorCodeType:
    description: ErrorCodeType represents enum type for error message
    type: string
    x-go-package: github.com/mustafa-korkmaz/goapitemplate/pkg/enum
  HealthCheckReq:
    properties:
      value:
        type: string
        x-go-name: Value
    title: HealthCheckReq represents body of HealthCheck request.
    type: object
    x-go-package: github.com/mustafa-korkmaz/goapitemplate/pkg/api/healthcheck/transport
  PagedList:
    description: PagedListRequest represents listing conditions for paginated items
    properties:
      include_records_total:
        type: boolean
        x-go-name: IncludeRecordsTotal
      length:
        format: int64
        type: integer
        x-go-name: Length
      start:
        format: int64
        type: integer
        x-go-name: Start
    type: object
    x-go-package: github.com/mustafa-korkmaz/goapitemplate/pkg/viewmodel/request
  ResponseResultType:
    description: ResponseResultType represents enum type for response code
    format: int64
    type: integer
    x-go-package: github.com/mustafa-korkmaz/goapitemplate/pkg/enum
  genericPagedListResponse:
    properties:
      data:
        $ref: '#/definitions/pagedListResponseWrapper'
      error_code:
        $ref: '#/definitions/ErrorCodeType'
      message:
        type: string
        x-go-name: Message
      result:
        $ref: '#/definitions/ResponseResultType'
    title: api generic response body including pagedList.
    type: object
    x-go-package: github.com/mustafa-korkmaz/goapitemplate/third_party/swagger
  loginRequest:
    properties:
      password:
        type: string
        x-go-name: Password
      username_or_email:
        type: string
        x-go-name: UsernameOrEmail
    type: object
    x-go-package: github.com/mustafa-korkmaz/goapitemplate/third_party/swagger/auth
  pagedListResponseWrapper:
    properties:
      items:
        items:
          type: object
        type: array
        x-go-name: Items
      records_total:
        format: int64
        type: integer
        x-go-name: RecordsTotal
    type: object
    x-go-package: github.com/mustafa-korkmaz/goapitemplate/third_party/swagger
  registerRequest:
    properties:
      email:
        type: string
        x-go-name: Email
      full_name:
        type: string
        x-go-name: FullName
      password:
        type: string
        x-go-name: Password
      username:
        type: string
        x-go-name: Username
    type: object
    x-go-package: github.com/mustafa-korkmaz/goapitemplate/third_party/swagger/auth
  uploadRequest:
    properties:
      content:
        items:
          format: uint8
          type: integer
        type: array
        x-go-name: Content
      name:
        type: string
        x-go-name: Name
    type: object
    x-go-package: github.com/mustafa-korkmaz/goapitemplate/third_party/swagger/upload
host: localhost:1907
info:
  contact:
    email: m.korkmaz@outlook.com
    name: Mustafa Korkmaz
  description: API Docs Go api boilerplate v1
  license:
    name: MIT
    url: http://opensource.org/licenses/MIT
  version: 1.0.0
paths:
  /v1/healthcheck:
    post:
      operationId: healthcheckPost
      parameters:
      - description: Healthcheck POST request body.
        in: body
        name: body
        schema:
          $ref: '#/definitions/HealthCheckReq'
        x-go-name: Body
      responses:
        "200":
          $ref: '#/responses/genericResponse'
      summary: healthcheck checks if the api is alive.
      tags:
      - healthcheck
  /v1/healthcheck/{value}:
    get:
      operationId: healthcheckGet
      parameters:
      - description: Healthcheck GET request path.
        in: path
        name: value
        required: true
        type: string
        x-go-name: Value
      responses:
        "200":
          $ref: '#/responses/genericResponse'
      summary: healthcheck checks if the api is alive.
      tags:
      - healthcheck
  /v1/healthcheck/paginationtest:
    post:
      operationId: paginationtest
      parameters:
      - description: api pagedList request body.
        in: body
        name: body
        schema:
          $ref: '#/definitions/PagedList'
        x-go-name: Body
      responses:
        "200":
          $ref: '#/responses/genericPagedListResponse'
      summary: Returns a sample list for pagination parameters.
      tags:
      - healthcheck
  /v1/login:
    post:
      description: Authenticates user and returns valid access_token and refresh_token
      operationId: login
      parameters:
      - description: LoginRequest POST request body.
        in: body
        name: body
        schema:
          $ref: '#/definitions/loginRequest'
        x-go-name: Body
      responses:
        "200":
          $ref: '#/responses/genericResponse'
      tags:
      - auth
  /v1/olives/{id}:
    get:
      operationId: oliveGet
      parameters:
      - description: Healthcheck GET request path.
        in: path
        name: id
        required: true
        type: string
        x-go-name: ID
      responses:
        "200":
          $ref: '#/responses/genericResponse'
      summary: Returns olive details with given id.
      tags:
      - olives
  /v1/olives/count:
    get:
      description: Returns olive count stored so far
      operationId: oliveCount
      responses:
        "200":
          $ref: '#/responses/genericResponse'
      tags:
      - olives
  /v1/refresh:
    get:
      description: Returns new valid access_token and refresh_token
      operationId: refreshToken
      responses:
        "200":
          $ref: '#/responses/genericResponse'
      tags:
      - auth
  /v1/register:
    post:
      description: Creates new user
      operationId: register
      parameters:
      - description: registerRequest POST request bofy.
        in: body
        name: body
        schema:
          $ref: '#/definitions/registerRequest'
        x-go-name: Body
      responses:
        "200":
          $ref: '#/responses/genericResponse'
      tags:
      - auth
  /v1/uploads:
    post:
      description: Saves the content
      operationId: uploadPost
      parameters:
      - description: uploadRequest POST request body.
        in: body
        name: body
        schema:
          $ref: '#/definitions/uploadRequest'
        x-go-name: Body
      responses:
        "200":
          $ref: '#/responses/genericResponse'
      tags:
      - uploads
  /v2/healthcheck/{value}:
    get:
      operationId: healthcheckGetV2
      parameters:
      - description: HealthcheckV2 GET request path.
        in: path
        name: value
        required: true
        type: string
        x-go-name: Value
      responses:
        "200":
          $ref: '#/responses/genericResponse'
      summary: healthcheck checks if the api version 2 is alive.
      tags:
      - healthcheck
produces:
- application/json
responses:
  genericPagedListResponse:
    description: api generic response body including pagedList.
    schema:
      $ref: '#/definitions/genericPagedListResponse'
  genericResponse:
    description: api generic response body.
    schema:
      $ref: '#/definitions/APIResponse'
schemes:
- http
security:
- bearer:
  - '[]'
securityDefinitions:
  bearer:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
