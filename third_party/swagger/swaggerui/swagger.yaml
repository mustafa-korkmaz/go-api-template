consumes:
- application/json
definitions:
  APIResponse:
    description: APIResponse represents base response
    properties:
      code:
        $ref: '#/definitions/ResponseCodeType'
      data:
        type: object
        x-go-name: Data
      message:
        type: string
        x-go-name: Message
    type: object
    x-go-package: github.com/mustafa-korkmaz/goapitemplate/pkg/model
  HealthCheckReq:
    properties:
      value:
        type: string
        x-go-name: Value
    title: HealthCheckReq represents body of HealthCheck request.
    type: object
    x-go-package: github.com/mustafa-korkmaz/goapitemplate/pkg/api/healthcheck/transport
  ResponseCodeType:
    description: ResponseCodeType represents enum type for response code
    format: int64
    type: integer
    x-go-package: github.com/mustafa-korkmaz/goapitemplate/pkg/enums
host: localhost:1907
info:
  contact:
    email: m.korkmaz@outlook.com
    name: Mustafa Korkmaz
  description: API Docs Go api boilerplate v1
  license:
    name: MIT
    url: http://opensource.org/licenses/MIT
  version: 1.0.0
paths:
  /v1/healthcheck:
    post:
      operationId: healthcheckPost
      parameters:
      - description: Healthcheck POST request body.
        in: body
        name: Body
        schema:
          $ref: '#/definitions/HealthCheckReq'
      responses:
        "200":
          $ref: '#/responses/healthcheckResponse'
      summary: healthcheck checks if the api is alive.
      tags:
      - healthcheck
  /v1/healthcheck/{value}:
    get:
      operationId: healthcheckGet
      parameters:
      - description: Healthcheck GET request path.
        in: path
        name: value
        required: true
        type: string
        x-go-name: Value
      responses:
        "200":
          $ref: '#/responses/healthcheckResponse'
      summary: healthcheck checks if the api is alive.
      tags:
      - healthcheck
produces:
- application/json
responses:
  healthcheckResponse:
    description: Healthcheck response body.
    schema:
      $ref: '#/definitions/APIResponse'
schemes:
- http
security:
- bearer:
  - '[]'
securityDefinitions:
  bearer:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
